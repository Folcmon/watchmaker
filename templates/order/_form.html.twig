{% macro printUsedPartsRow(form) %}
    <div class="row used-part-item mb-4">
        <div class="col-8">
            <div class="form-group">
                {{ form_widget(form.storage, {'attr': {'class': 'select2'}}) }}

            </div>
        </div>
        <div class="col-2">
            <div class="form-group">
                {{ form_widget(form.quantity) }}
            </div>
        </div>
        <div class="col-2">
            <div class="form-group">
                {{ form_widget(form.delete, {'attr': {'class': 'btn btn-danger delete-part-btn'}}) }}
            </div>
        </div>
    </div>
{% endmacro %}

{% import _self as formTheme %}

{{ form_start(form) }}
<div class="form-group mb-4">
    <label class="col-form-label">
        {{ "Robocizna zł"|trans }}
    </label>
    <div class="">
        {{ form_errors(form.labor) }}
    </div>
    {{ form_widget(form.labor, {'attr':{'class':'form-control'}}) }}
</div>

<div class="form-group mb-4">
    <label class="col-form-label">
        {{ "Data przyjęcia do serwisu"|trans }}
    </label>
    <div class="">
        {{ form_errors(form.orderAcceptanceDate) }}
    </div>
    {{ form_widget(form.orderAcceptanceDate, {'attr':{'class':'form-control'}}) }}
</div>

<div class="form-group mb-4">
    <label class="col-form-label">
        {{ "Stopa VAT robocizny"|trans }}
    </label>
    <div class="">
        {{ form_errors(form.laborVatRate) }}
    </div>
    {{ form_widget(form.laborVatRate, {'attr':{'class':'form-control'}}) }}
</div>
<div class="form-group mb-4">
    <label class="col-form-label">
        {{ "Nazwa usługi"|trans }}
    </label>
    <div class="">
        {{ form_errors(form.name) }}
    </div>
    {{ form_widget(form.name, {'attr':{'class':'form-control'}}) }}
</div>
<div class="form-group mb-4">
    <label class="col-form-label">
        {{ "Opis usługi"|trans }}
    </label>
    <div class="">
        {{ form_errors(form.description) }}
    </div>
    {{ form_widget(form.description, {'attr':{'class':'form-control'}}) }}
</div>
<div class="form-group mb-4">
    <label class="col-form-label">
        {{ "Załączniki"|trans }}
    </label>
    <div class="">
        {{ form_errors(form.serviceAttachments) }}
    </div>
    {{ form_widget(form.serviceAttachments, {'attr':{'class':'form-control'}}) }}
</div>
<div class="form-group mb-4">
    <p>{{ "Wybierz metodę dodania zdjęcia"|trans }}:</p>
    <button type="button" class="btn btn-success btn-lg" id="useCamera">📷 {{ "Użyj kamery"| trans }}</button>
    <button type="button" class="btn btn-success btn-lg" id="uploadFile">📂 {{ "Wybierz z plików"|trans }}</button>

    <video id="video" width="300" autoplay style="display:none;"></video>
    <button type="button" id="takePhoto" class="btn btn-success btn-lg"
            style="display:none !important;">{{ "Zrób zdjęcie"|trans }}</button>
    <canvas id="canvas" class="border-1" width="300" height="200" style="display:none;"></canvas>

    <input type="file" id="photoInput" name="photos[]" accept="image/*" multiple style="display:none;">
    <input type="hidden" name="photosFromCamera" id="photosFromCamera" value="">
    <input type="hidden" id="photoData" name="photoData">

    <div id="preview"></div>
</div>
<div class="form-group mb-4">
    <label class="col-form-label">
        {{ "Klient"|trans }}
    </label>
    <div class="">
        {{ form_errors(form.client) }}
    </div>
    <div class="input-group">
        {{ form_widget(form.client, {'attr':{'class':'form-control select2'}}) }}
        <span class="input-group-text add-client-button">
            <i class='bx bx-folder-plus'></i>
        </span>
    </div>
</div>

<div class="form-group mb-4">
    <label class="col-form-label">
        {{ "Status"|trans }}
    </label>
    <div class="">
        {{ form_errors(form.status) }}
    </div>
    {{ form_widget(form.status, {'attr':{'class':'form-control'}}) }}
</div>

<div class="form-group mb-4">
    <div class="row">
        <label class="col-form-label h2">
            {{ "Materiały"|trans }}
        </label>
    </div>
    <div class="row mb-4">
        <div class="col-md-12 used-parts-container"
             data-prototype="{{ formTheme.printUsedPartsRow(form.realisedServiceUsedItems.vars.prototype)|e('html_attr') }}">
            <div class="row">
                <div class="col-md-12 mb-4">
                    <span class="btn btn-success used-part-addition-button btn-lg"
                          data-collection-holder-class="usedParts">{{ "Dodaj użytą część"|trans }}</span>
                </div>
                {% for part in form.realisedServiceUsedItems %}
                    {{ formTheme.printUsedPartsRow(part) }}
                {% endfor %}
            </div>
        </div>
    </div>
</div>
<div class="form-group mb-4">
    <button class="btn btn-primary float-end btn-lg btn-lg">{{ "Zapisz"|trans }}</button>
</div>
{{ form_end(form) }}
<div id="client-add-modal" class="modal fade" tabindex="-1" aria-labelledby="client-modal" aria-hidden="true">
    <div>
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">{{ "Dodaj klienta"|trans }}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let modal = new bootstrap.Modal($('#client-add-modal')[0]);
    document.addEventListener('DOMContentLoaded', function () {
        // Elementy referencyjne
        let container = document.querySelector('.used-parts-container');
        let addButton = document.querySelector('.used-part-addition-button');

        // Prototype formularza
        let prototype = container.dataset.prototype;
        let index = {{ form.realisedServiceUsedItems|length }};
        // Dodanie nowej części
        addButton.addEventListener('click', function () {
            let newForm = prototype.replace(/__name__/g, index);
            container.insertAdjacentHTML('beforeend', newForm);
            index++;
            initializeSelect2('.select2');
        });

        // Usuwanie części po kliknięciu
        container.addEventListener('click', function (event) {
            if (event.target && event.target.classList.contains('delete-part-btn')) {
                event.target.closest('.used-part-item').remove();
            }
        });
    });
    //when user click on add button make ajax call for add client form
    $(document).ready(function () {
        // Add client button
        $('.add-client-button').on('click', function () {
            let url = '{{ path('app_client_new_ajax') }}';
            $.get(url, function (data) {
                let html = $(data);
                $('#client-add-modal .modal-body').html(html);
                modal.show();
            });
        });
        // Add client form submit
        $(document).on('submit', '#client-form', function (event) {
            event.preventDefault();
            event.stopPropagation();
            let form = $('#client-add-modal form');
            let url = "{{ path('app_client_new_ajax') }}";
            let data = form.serialize();
            $.post(url, data, function (response) {
                if (response.status === 'success') {
                    let client = response.client;
                    let option = new Option(client.name, client.id, true, true);
                    $('#order_client').append(option).trigger('change');
                    modal.hide();
                } else {
                    $('#client-add-modal .modal-body').html(response);
                }
            });
        });
    });
</script>
<script>
    $(document).ready(function () {
        let video = document.getElementById('video');
        let canvas = document.getElementById('canvas');
        let context = canvas.getContext('2d');
        let photosArray = [];

        // 📷 Opcja WebRTC - Kamera
        $('#useCamera').click(function () {
            navigator.mediaDevices.getUserMedia({video: true})
                .then(function (stream) {
                    video.srcObject = stream;
                    video.style.display = 'block';
                    $('#takePhoto').show();
                })
                .catch(function (error) {
                    alert("Nie udało się uzyskać dostępu do kamery: " + error);
                });
        });

        // 📸 Zrób zdjęcie i zapisz do formularza
        $('#takePhoto').click(function () {
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            let photoData = canvas.toDataURL('image/png'); // Zapis zdjęcia jako Base64
            let imageId = 'image_' + photosArray.length;
            photosArray.push({id: imageId, data: photoData});
            updatePreview();
            video.srcObject.getTracks().forEach(track => track.stop()); // Wyłączenie kamery
            video.style.display = 'none';
            //append photo data to hidden input
            $('#photosFromCamera').val(photoData);
            $('#takePhoto').hide();
        });

        // 📂 Opcja Upload - Z plików
        $('#uploadFile').click(function () {
            $('#photoInput').click();
        });

        // 📂 Obsługa podglądu wybranych zdjęć
        $('#photoInput').change(function (event) {
            let files = event.target.files;
            for (let i = 0; i < files.length; i++) {
                let file = files[i];
                let reader = new FileReader();
                reader.onload = function (e) {
                    let imageId = 'image_' + photosArray.length;
                    photosArray.push({id: imageId, data: e.target.result});
                    updatePreview();
                };
                reader.readAsDataURL(file);
            }
        });

        // Aktualizacja podglądu
        function updatePreview() {
            $('#preview').html("");
            photosArray.forEach(photo => {
                let imgHtml = '<div id="' + photo.id + '" style="display: inline-block; position: relative; margin: 5px;">' +
                    '<img src="' + photo.data + '" width="200">' +
                    '<button type="button" class="remove-photo" data-id="' + photo.id + '" style="position: absolute; top: 5px; right: 5px;">X</button>' +
                    '</div>';
                $('#preview').append(imgHtml);
            });
        }

        // Usuwanie zdjęcia
        $(document).on('click', '.remove-photo', function () {
            let imageId = $(this).data('id');
            photosArray = photosArray.filter(photo => photo.id !== imageId);
            updatePreview();
        });
    });
</script>